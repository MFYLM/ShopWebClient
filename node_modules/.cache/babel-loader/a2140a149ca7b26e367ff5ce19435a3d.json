{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebDev\\\\shop-web\\\\client\\\\src\\\\components\\\\workEfficiently\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [penColor, setPenColor] = useState(\"black\");\n\n  const changeColor = e => {\n    setPenColor(penColor);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = `${penColor}`;\n    context.lineWidth = 2;\n    contextRef.current = context;\n  }, []);\n\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent; // get mouse position\n\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n\n    if (isDrawing) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n    }\n  };\n\n  const stopDraw = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"favcolor\",\n        onChange: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"board\",\n        id: \"board\",\n        ref: canvasRef,\n        onMouseDown: startDraw,\n        onMouseUp: stopDraw,\n        onMouseMove: draw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"Nfkh8u/pPKL6wp/6TLZaU9ePGRE=\");\n\n_c = Board;\n;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Board","canvasRef","contextRef","isDrawing","setIsDrawing","penColor","setPenColor","changeColor","e","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDraw","nativeEvent","offsetX","offsetY","beginPath","moveTo","draw","lineTo","stroke","stopDraw","closePath"],"sources":["E:/WebDev/shop-web/client/src/components/workEfficiently/Board.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Board.css\"\r\n\r\n\r\nfunction Board() {\r\n\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const [penColor, setPenColor] = useState(\"black\");\r\n\r\n    const changeColor = (e) => {\r\n        setPenColor(penColor);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = window.innerWidth * 2;\r\n        canvas.height = window.innerHeight * 2;\r\n\r\n        canvas.style.width = `${window.innerWidth}px`;\r\n        canvas.style.height = `${window.innerHeight}px`;\r\n\r\n        const context = canvas.getContext(\"2d\");\r\n        context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = `${penColor}`;\r\n        context.lineWidth = 2;\r\n        contextRef.current = context;\r\n    }, []);\r\n    \r\n\r\n    const startDraw = ({nativeEvent}) => {\r\n        const {offsetX, offsetY} = nativeEvent;                 // get mouse position\r\n\r\n        contextRef.current.beginPath();\r\n        contextRef.current.moveTo(offsetX, offsetY);\r\n        setIsDrawing(true);\r\n    };\r\n\r\n\r\n    const draw = ({nativeEvent}) => {\r\n        if (isDrawing)\r\n        {\r\n            const {offsetX, offsetY} = nativeEvent;\r\n            contextRef.current.lineTo(offsetX, offsetY);\r\n            contextRef.current.stroke();\r\n        }\r\n    };\r\n \r\n\r\n    const stopDraw = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"color-picker-container\">\r\n                <input type=\"color\" id=\"favcolor\" onChange={changeColor}/>\r\n            </div>\r\n            <div className=\"board\">\r\n                <canvas className=\"board\" id=\"board\"\r\n                    ref={canvasRef}\r\n                    onMouseDown={startDraw}\r\n                    onMouseUp={stopDraw}\r\n                    onMouseMove={draw}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}